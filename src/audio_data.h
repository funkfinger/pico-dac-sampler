#ifndef AUDIO_DATA_H
#define AUDIO_DATA_H

#include <Arduino.h>

// Simple test WAV file - 440Hz sine wave (mono, 16-bit, 16kHz, 0.5 seconds)
// Minimal WAV with just enough data to test playback
const uint8_t test_wav_data[] PROGMEM = {
    // WAV Header (44 bytes)
    0x52, 0x49, 0x46, 0x46,  // "RIFF"
    0x2C, 0x3F, 0x00, 0x00,  // File size - 8 (16172 bytes total)
    0x57, 0x41, 0x56, 0x45,  // "WAVE"

    // Format chunk
    0x66, 0x6D, 0x74, 0x20,  // "fmt "
    0x10, 0x00, 0x00, 0x00,  // Chunk size (16)
    0x01, 0x00,              // Audio format (1 = PCM)
    0x01, 0x00,              // Number of channels (1 = mono)
    0x80, 0x3E, 0x00, 0x00,  // Sample rate (16000 Hz)
    0x00, 0x7D, 0x00, 0x00,  // Byte rate (32000)
    0x02, 0x00,              // Block align (2)
    0x10, 0x00,              // Bits per sample (16)

    // Data chunk header
    0x64, 0x61, 0x74, 0x61,  // "data"
    0x00, 0x3F, 0x00,
    0x00,  // Data size (16128 bytes = 8064 samples = 0.504 seconds)

    // 440Hz sine wave data - one complete cycle repeated
    // At 16kHz, 440Hz = ~36.36 samples per cycle, using 36 samples
    0x00, 0x00, 0x8E, 0x11, 0x15, 0x23, 0x8C, 0x34, 0xE8, 0x45, 0x26, 0x57,
    0x3C, 0x68, 0x26, 0x79, 0xD8, 0x89, 0x4E, 0x9A, 0x7E, 0xAA, 0x62, 0xBA,
    0xF2, 0xC9, 0x26, 0xD9, 0xF6, 0xE7, 0x5A, 0xF6, 0x4A, 0x04, 0xC6, 0x11,
    0xC6, 0x1E, 0x4A, 0x2B, 0x5A, 0x37, 0xF6, 0x42, 0x26, 0x4E, 0xF2, 0x58,
    0x62, 0x63, 0x7E, 0x6D, 0x4E, 0x77, 0xD8, 0x80, 0x26, 0x8A, 0x3C, 0x93,
    0x26, 0x9C, 0xE8, 0xA4, 0x8C, 0xAD, 0x15, 0xB6, 0x8E, 0xBE, 0x00, 0xC7};

const size_t test_wav_size = sizeof(test_wav_data);

#endif  // AUDIO_DATA_H
